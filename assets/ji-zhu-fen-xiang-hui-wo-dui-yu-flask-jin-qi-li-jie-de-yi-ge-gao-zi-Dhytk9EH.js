import{_ as c}from"./ValaxyMain.vue_vue_type_style_index_0_lang-DRVqeRiY.js";import{a as u,p as r,o as _,c as k,w as a,f as p,r as s,g as l,h as e}from"./app-CzjF7NIc.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-17i98rOK.js";import"./YunCard.vue_vue_type_script_setup_true_lang-Da3dkqK-.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-BsneHNVS.js";import"./index-C7yU5XnD.js";const f=l("blockquote",null,[l("p",null,"这是一个应付技术分享会的文稿 写在开头： 技术分享会写的稿子，文字写的很认真。PPT就。。。应付吧，计划用reveal-md生成PPT （反正第一天感觉好多都好水) 据我认真观察，讲水的大家听段子，讲认真的也没有几个人听，PPT做的炫酷也不过是换来几个抬头几下。更何况屏幕离远点字体就不清晰了，效果比较差。而且干货用PPT讲也很难讲出深度，只能用于科普。所以还不如干脆在blog里分享自己的稿件，梳理一遍自己对于Flask的理解和知识点。")],-1),m=l("p",null,[e("顺便安利一款叫做marp的工具，能够用markdown写PPT。觉得还是很不错的。"),l("code",null,"npm"),e("安装后用npx导出为pptx格式一直卡死，最后我直接用vscode插件商店的marp插件就很快导出来了pptx格式")],-1),j=l("h1",{id:"技术分享ppt提纲",tabindex:"-1"},[e("技术分享PPT提纲 "),l("a",{class:"header-anchor",href:"#技术分享ppt提纲","aria-label":'Permalink to "技术分享PPT提纲"'},"​")],-1),b=l("p",null,"[TOC]",-1),g=l("h2",{id:"flask基本的概念",tabindex:"-1"},[e("Flask基本的概念 "),l("a",{class:"header-anchor",href:"#flask基本的概念","aria-label":'Permalink to "Flask基本的概念"'},"​")],-1),F=l("ol",null,[l("li",null,[l("p",null,"路由")]),l("li",null,[l("p",null,"模板渲染及jinja2引擎")]),l("li",null,[l("p",null,"视图及表单")]),l("li",null,[l("p",null,"数据库及数据库迁移")])],-1),P=l("h3",{id:"flask是什么",tabindex:"-1"},[e("Flask是什么？ "),l("a",{class:"header-anchor",href:"#flask是什么","aria-label":'Permalink to "Flask是什么？"'},"​")],-1),v=l("p",null,"Flask是一种web框架，Flask本身相当于一个内核，其他几乎所有的功能都要用到扩展，都需要用第三方的扩展来实现。用 extension 增加其他功能。Flask没有默认使用的数据库、窗体验证工具。你可以选择MySQL，也可以用NoSQL。其 WSGI 工具箱采用 Werkzeug（路由模块），模板引擎则使用 Jinja2",-1),y=l("p",null,"简而言之，用Flask能够帮助你快速构建一个网站。（比喻的话，就是Flask提供了构建房子的基本骨架，而具体内容的建造则交给用户自己）",-1),x=l("p",null,"（在这一节 Flask的基本概念里 我将用较比较易懂的解释，让大家对flask这个web框架有个很基础的概念 如果有人感兴趣的话，可以尝试一下用flask实现一些个人小项目 ）",-1),$=l("h3",{id:"路由",tabindex:"-1"},[e("路由 "),l("a",{class:"header-anchor",href:"#路由","aria-label":'Permalink to "路由"'},"​")],-1),T=l("p",null,[e("在Flask框架中，路由 就表示为用户请求的"),l("em",null,"URL"),e("找出其对应的"),l("em",null,"处理函数"),e("之意。")],-1),S=l("p",null,"解释",-1),w=l("p",null,"前端页面的显示是依赖于后台提供的数据的，例如一个博客网站，首页显示的文章，用户来自于数据库。那么路由的作用就是将后台的函数与网页对应的url的绑定起来",-1),q=l("h3",{id:"模板渲染及jinja2",tabindex:"-1"},[e("模板渲染及jinja2 "),l("a",{class:"header-anchor",href:"#模板渲染及jinja2","aria-label":'Permalink to "模板渲染及jinja2"'},"​")],-1),z=l("p",null,"接下来我们思考这样一个场景，在flask中是如何实现前后端分离的呢?",-1),L=l("p",null,"这里就要提出了flask的模板渲染，和jinja2引擎的概念",-1),O=l("p",null,"之前讲到了url是负责将函数与url绑定，那么模板渲染则可以理解为函数与templates绑定。及具体到渲染哪一个html页面",-1),R=l("p",null,"至于jinja2则是Flask的默认的模板渲染引擎，它的语法，例如一些变量的使用很像vue，前端人员可以直接写templates对应的html/css，而无需在意后端的实现",-1),M=l("h4",{id:"模板的继承",tabindex:"-1"},[e("模板的继承 "),l("a",{class:"header-anchor",href:"#模板的继承","aria-label":'Permalink to "模板的继承"'},"​")],-1),N=l("p",null,"当然对于一个网站而言，很多页面结构可能出现相似的情况",-1),Q=l("p",null,"例如：对于用户的信息显示保持不变，内容发生了改变。如果是这样的话需要写很多内容相似的模板么？在flask这里可以使用模板继承的相关功能",-1),B=l("h3",{id:"视图函数",tabindex:"-1"},[e("视图函数 "),l("a",{class:"header-anchor",href:"#视图函数","aria-label":'Permalink to "视图函数"'},"​")],-1),C=l("p",null,"其实视图函数的概念在前文已经说出，之前在讲到一个函数会负责与url及html前端关联，这个函数就是视图函数",-1),D=l("h3",{id:"表单",tabindex:"-1"},[e("表单 "),l("a",{class:"header-anchor",href:"#表单","aria-label":'Permalink to "表单"'},"​")],-1),I=l("p",null,"表单包括什么呢？举个例子，例如用户注册就是一个最简单的表单，如果不考虑使用现成的md轮子，由多个组件组成的发表文章的功能也算是一个表单。",-1),V=l("p",null,"Flask有一套属于自己的表单类(FlaskForm),如果使用的话只需要直接继承该类，并实现对应的字段，例如，实现表单中用户名的定义，只需要在类内实现一个StringField并赋值给一个变量，例如该变量叫username",-1),J=l("p",null,"在视图函数中检查表单内容是否满足要求，则直接看该变量下data的字段是否合乎要求",-1),U=l("h3",{id:"数据库及数据库迁移",tabindex:"-1"},[e("数据库及数据库迁移 "),l("a",{class:"header-anchor",href:"#数据库及数据库迁移","aria-label":'Permalink to "数据库及数据库迁移"'},"​")],-1),W=l("p",null,"在开头讲到，Flask 没有关联的默认数据库。但是这里一些小型的项目我这里推荐Flask自带的ORM模型，例如Flask-SQLalchemy",-1),X=l("p",null,"它的优点之一简单，它是简化了SQL的具体语法，便捷地创造对应的数据模型",-1),Z=l("p",null,"优点之二则是ORM支持多种数据库有很强的可移植性",-1),G=l("p",null,"创建一个模型只需要创建一个类，例如创建一个用户类，代表一个用户所涉及到的全部数据存储项，例如 用户名，id，邮箱，关于甚至可以用ORM模型快速地创建例如一对多的关系",-1),A=l("p",null,"至于数据库迁移，有很多应用场景。这里我来举一个我日常使用的例子，例如在我开发迭代自己个人项目的过程中，突然发现用户的数据对象需要新增一个头像的功能，但是又不希望把以往的数据丢弃，那么可以用数据迁移实现",-1),E=l("h2",{id:"flask安全",tabindex:"-1"},[e("Flask安全 "),l("a",{class:"header-anchor",href:"#flask安全","aria-label":'Permalink to "Flask安全"'},"​")],-1),H=l("h3",{id:"flask自身安全",tabindex:"-1"},[e("Flask自身安全： "),l("a",{class:"header-anchor",href:"#flask自身安全","aria-label":'Permalink to "Flask自身安全："'},"​")],-1),K=l("p",null,"得益于jinja2引擎，jinja自带XSS过滤，之前我自己在自己项目对表单进行一些自带对特殊字符的过滤，例如< >等，都会发现jinja会自动转义。但是jinja无法避免全部的XSS攻击，例如设置value时变量没有用引号包围",-1),Y=l("p",null,"还有就是jinja引擎对标签a的href属性容易存在注入，例如",-1),ll=l("p",null,[l("code",null,"javascript:alert('unsafe');")],-1),el=l("p",null,"最后自身安全讲一下CSRF，这个是可以在Flask的配置中配置的",-1),al=l("h3",{id:"开发安全",tabindex:"-1"},[e("开发安全 "),l("a",{class:"header-anchor",href:"#开发安全","aria-label":'Permalink to "开发安全"'},"​")],-1),nl=l("p",null,"以Flask-admin模块为例，有装饰器login_required来限制仅登录用户可以访问页面，",-1),sl=l("p",null,"初次之外flask-admin还能提供记住模式，保存session，退出当前用户等",-1),tl=l("p",null,"但是在使用login_required装饰器来限制仅注册用户访问的代码段时，如果考虑不周也会有对应的安全问题",-1),il=l("p",null,"例如：",-1),ol=l("p",null,[l("code",null,"http://127.0.0.1:5000/login?next=%2Fpost")],-1),rl=l("p",null,"在应用中，我们用视图函数实现了一个这样的url，当我们登陆后则会重定向到next所指向的位置",-1),dl=l("p",null,[e("这里有一个很严重的安全问题，当我们用"),l("code",null,"request.args.get('next')"),e("获取重定向的位置时，很有可能有人恶意在next后使用绝对路径从而绕过一些验证，越权访问到不该访问的页面。所以这里的开发要添加一个检查是绝对路径还是相对路径的函数")],-1),hl=l("p",null,"以Flask开发为例的web框架的开发，还有类似的场景就是文件上传，例如对文件名的检查,可以使用过长的文件名溢出，或者用特殊字符构造文件名绕过检测",-1),cl=l("h2",{id:"使用异步及flask自身局限性",tabindex:"-1"},[e("使用异步及Flask自身局限性 "),l("a",{class:"header-anchor",href:"#使用异步及flask自身局限性","aria-label":'Permalink to "使用异步及Flask自身局限性"'},"​")],-1),ul=l("h3",{id:"异步",tabindex:"-1"},[e("异步 "),l("a",{class:"header-anchor",href:"#异步","aria-label":'Permalink to "异步"'},"​")],-1),_l=l("ol",null,[l("li",null,[l("p",null,[e("选择broker（消息队列)，例如"),l("code",null,"redis ")])]),l("li",null,[l("p",null,[e("尝试用celery实现,在"),l("code",null,"__init__"),e("中实例化celery以及定义对应的celery配置文件。")])]),l("li",null,[l("p",null,"在routes或者其他文件中用celery的装饰器定义对应的异步后台任务")]),l("li",null,[l("p",null,[e("调用"),l("code",null,"delay"),e("或"),l("code",null,"apply_async"),e("方法执行对应的celery任务")])])],-1),kl=l("h3",{id:"使用缺点",tabindex:"-1"},[e("使用缺点： "),l("a",{class:"header-anchor",href:"#使用缺点","aria-label":'Permalink to "使用缺点："'},"​")],-1),pl=l("ul",null,[l("li",null,[l("code",null,"celery4"),e(" 不支持"),l("code",null,"windows"),e(",celery3不支持py3.6及以上")]),l("li",null,[l("code",null,"celery"),e("过重,"),l("code",null,"broker"),e("需要"),l("code",null,"redis"),e("类型的支持")]),l("li",null,"虽然轻便但是对于一些大型项目的开发比Django不那么完美，尤其是像后台管理系统没有比Django更成熟的能够拿来即用的轮子"),l("li",null,"和jinja2绑死，无法使用其他模板引擎，例如mako")],-1),xl={__name:"ji-zhu-fen-xiang-hui-wo-dui-yu-flask-jin-qi-li-jie-de-yi-ge-gao-zi",setup(fl,{expose:d}){const t=JSON.parse('{"title":"对于Flask的个人理解及安全相关","description":"","frontmatter":{"title":"对于Flask的个人理解及安全相关","date":"2020-08-17T22:56:27.000Z","tags":["flask"],"published":true,"hideInList":false,"feature":null,"isTop":false},"headers":[{"level":2,"title":"Flask基本的概念","slug":"flask基本的概念","link":"#flask基本的概念","children":[{"level":3,"title":"Flask是什么？","slug":"flask是什么","link":"#flask是什么","children":[]},{"level":3,"title":"路由","slug":"路由","link":"#路由","children":[]},{"level":3,"title":"模板渲染及jinja2","slug":"模板渲染及jinja2","link":"#模板渲染及jinja2","children":[]},{"level":3,"title":"视图函数","slug":"视图函数","link":"#视图函数","children":[]},{"level":3,"title":"表单","slug":"表单","link":"#表单","children":[]},{"level":3,"title":"数据库及数据库迁移","slug":"数据库及数据库迁移","link":"#数据库及数据库迁移","children":[]}]},{"level":2,"title":"Flask安全","slug":"flask安全","link":"#flask安全","children":[{"level":3,"title":"Flask自身安全：","slug":"flask自身安全","link":"#flask自身安全","children":[]},{"level":3,"title":"开发安全","slug":"开发安全","link":"#开发安全","children":[]}]},{"level":2,"title":"使用异步及Flask自身局限性","slug":"使用异步及flask自身局限性","link":"#使用异步及flask自身局限性","children":[{"level":3,"title":"异步","slug":"异步","link":"#异步","children":[]},{"level":3,"title":"使用缺点：","slug":"使用缺点","link":"#使用缺点","children":[]}]}],"relativePath":"pages/posts/history/ji-zhu-fen-xiang-hui-wo-dui-yu-flask-jin-qi-li-jie-de-yi-ge-gao-zi.md","path":"/home/runner/work/1dayluo.github.io/1dayluo.github.io/pages/posts/history/ji-zhu-fen-xiang-hui-wo-dui-yu-flask-jin-qi-li-jie-de-yi-ge-gao-zi.md","lastUpdated":1714218709000}'),o=u(),i=t.frontmatter||{};return o.meta.frontmatter=Object.assign(o.meta.frontmatter||{},t.frontmatter||{}),r("pageData",t),r("valaxy:frontmatter",i),globalThis.$frontmatter=i,d({frontmatter:{title:"对于Flask的个人理解及安全相关",date:"2020-08-17T22:56:27.000Z",tags:["flask"],published:!0,hideInList:!1,feature:null,isTop:!1}}),(n,jl)=>{const h=c;return _(),k(h,{frontmatter:p(i)},{"main-content-md":a(()=>[f,m,j,b,g,F,P,v,y,x,$,T,S,w,q,z,L,O,R,M,N,Q,B,C,D,I,V,J,U,W,X,Z,G,A,E,H,K,Y,ll,el,al,nl,sl,tl,il,ol,rl,dl,hl,cl,ul,_l,kl,pl]),"main-header":a(()=>[s(n.$slots,"main-header")]),"main-header-after":a(()=>[s(n.$slots,"main-header-after")]),"main-nav":a(()=>[s(n.$slots,"main-nav")]),"main-content":a(()=>[s(n.$slots,"main-content")]),"main-content-after":a(()=>[s(n.$slots,"main-content-after")]),"main-nav-before":a(()=>[s(n.$slots,"main-nav-before")]),"main-nav-after":a(()=>[s(n.$slots,"main-nav-after")]),comment:a(()=>[s(n.$slots,"comment")]),footer:a(()=>[s(n.$slots,"footer")]),aside:a(()=>[s(n.$slots,"aside")]),"aside-custom":a(()=>[s(n.$slots,"aside-custom")]),default:a(()=>[s(n.$slots,"default")]),_:3},8,["frontmatter"])}}};export{xl as default};
